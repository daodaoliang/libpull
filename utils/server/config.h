#ifndef CONFIG_H_
#define CONFIG_H_

#ifndef COAP_SERVER_PORT
#define COAP_SERVER_PORT 5683
#endif

#ifndef COAPS_SERVER_PORT
#define COAPS_SERVER_PORT 5684
#endif

#define MAX_ADDR_LEN 32
#define MAX_PATH_LEN 128

#define DEFAULT_FIRMWARE_NAME "fake_firmware_dead"

#ifndef WITH_TESTING_RESOURCES
#define WITH_TESTING_RESOURCES 1
#endif

typedef struct psk_key_t {
    char* identity;
    unsigned char* key;
    size_t len;
} psk_key_t;

static const psk_key_t psk_key = {
    .identity = "CoAP",
    .key = (unsigned char*) "ThisIsOurSecret1",
    .len = 16
};

#define DEFAULT_CURVE SECP256R1
#define CURVE_LEN 32
static const unsigned char ecdsa_priv_key[CURVE_LEN*2] = {
    0xa3,0x31,0x85,0x2a,0xe8,0x08,0x43,0xc0,0x48,0xd5,0x5e,0x03,0xd2,0x4a,0xc5,0x8c,
    0x0a,0xf0,0x00,0x85,0x99,0xe2,0x7f,0xec,0xc2,0x49,0xc8,0xe7,0x22,0xd3,0xff,0x37,
    0x28,0xbe,0x69,0xbf,0xd8,0x1d,0xde,0x1c,0xab,0x12,0x35,0xb4,0x1c,0x39,0x19,0xf1,
    0x25,0xf9,0x29,0x87,0x6b,0x11,0xef,0xa3,0x4f,0x32,0xfc,0x0c,0xe8,0xc8,0x59,0xd8
};
static const unsigned char ecdsa_pub_key_x[CURVE_LEN] = {
    0xcf,0x9c,0xf2,0xf8,0x44,0x8b,0xe2,0x7f,0xff,0xc9,0xe1,0x69,0xdb,0x84,0x7c,0xdf,
    0xe6,0xd6,0xa9,0xd3,0x5b,0xbf,0xe9,0x99,0xc9,0x48,0x47,0xe9,0x5a,0x21,0x58,0xdb,
};
static const unsigned char ecdsa_pub_key_y[CURVE_LEN] = {
    0x20,0x90,0x2f,0xeb,0xfe,0x7f,0x00,0x00,0x38,0x90,0x2f,0xeb,0xfe,0x7f,0x00,0x00,
    0xa0,0x8f,0x2f,0xeb,0xfe,0x7f,0x00,0x00,0xe8,0x90,0x2f,0xeb,0xfe,0x7f,0x00,0x00
};
static const unsigned char client_x[CURVE_LEN] = {
    0xa3,0x31,0x85,0x2a,0xe8,0x08,0x43,0xc0,0x48,0xd5,0x5e,0x03,0xd2,0x4a,0xc5,0x8c,
    0x0a,0xf0,0x00,0x85,0x99,0xe2,0x7f,0xec,0xc2,0x49,0xc8,0xe7,0x22,0xd3,0xff,0x37,
};
static const unsigned char client_y[CURVE_LEN] = {
    0x28,0xbe,0x69,0xbf,0xd8,0x1d,0xde,0x1c,0xab,0x12,0x35,0xb4,0x1c,0x39,0x19,0xf1,
    0x25,0xf9,0x29,0x87,0x6b,0x11,0xef,0xa3,0x4f,0x32,0xfc,0x0c,0xe8,0xc8,0x59,0xd8
};

#endif
